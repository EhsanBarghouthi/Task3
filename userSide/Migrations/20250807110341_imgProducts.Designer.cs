// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using userSide.Data;

#nullable disable

namespace userSide.Migrations
{
    [DbContext(typeof(ApplicationContextDb))]
    [Migration("20250807110341_imgProducts")]
    partial class imgProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("userSide.Models.category", b =>
                {
                    b.Property<int>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("categoryId"));

                    b.Property<string>("categoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoryId");

                    b.ToTable("product");

                    b.HasData(
                        new
                        {
                            categoryId = 1,
                            categoryName = "Electronics",
                            categoryType = "Laptops"
                        },
                        new
                        {
                            categoryId = 2,
                            categoryName = "Electronics",
                            categoryType = "Computers"
                        },
                        new
                        {
                            categoryId = 3,
                            categoryName = "Electronics",
                            categoryType = "Televisions"
                        },
                        new
                        {
                            categoryId = 4,
                            categoryName = "Electronics",
                            categoryType = "AirConditions"
                        },
                        new
                        {
                            categoryId = 5,
                            categoryName = "Electronics",
                            categoryType = "Microwaves"
                        });
                });

            modelBuilder.Entity("userSide.Models.product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"));

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productName")
                        .HasColumnType("int");

                    b.Property<double>("productPrice")
                        .HasColumnType("float");

                    b.HasKey("productId");

                    b.HasIndex("categoryId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("userSide.Models.product", b =>
                {
                    b.HasOne("userSide.Models.category", "category")
                        .WithMany("products")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("userSide.Models.category", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
